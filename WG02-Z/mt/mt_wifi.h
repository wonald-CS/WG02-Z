#ifndef ____HAL_WIFI_H_
#define ____HAL_WIFI_H_


#define ESP12_AT_LEN 70

#define WIFI_TX_QUEUE_SUM			    10		//发送网关命令队列组个数	
#define WIFI_TX_BUFFSIZE_MAX			200     //2 + 198

#define WIFI_RXBUFFSIZE_MAX		    	800


enum
{
	ESP12_AT_RESET =0,
	ESP12_AT_AT,
	ESP12_AT_ATE,	
	ESP12_AT_CWMODE,	
	ESP12_AT_CWAUTOCONN,		
	ESP12_AT_CWSTARTSMART,	
	ESP12_AT_CWSTOPSMART,	
	ESP12_AT_CWSTATE,
	ESP12_AT_CWLAP,	
	
	ESP12_AT_MQTTUSERCFG,// "AT+MQTTUSERCFG=0,1,\"", 
	ESP12_AT_MQTTCONN,// "AT+MQTTCONN=0,\"",   
	ESP12_AT_MQTTPUB,// "AT+MQTTPUB=0,\"",    
	ESP12_AT_MQTTSUB,// "AT+MQTTSUB=0,\"",     
	ESP12_AT_MQTTCLEAN,// "AT+MQTTCLEAN=0",    
	ESP12_AT_MAX,
};


typedef enum
{
	ESP12_AT_RESPONSE_WIFI_CONNECTED =0,
	ESP12_AT_RESPONSE_WIFI_DISCONNECT,
	ESP12_AT_RESPONSE_CWSTATE,	
	ESP12_AT_RESPONSE_CWJAP,
	ESP12_AT_RESPONSE_ERROR,
	ESP12_AT_RESPONSE_SMART_GET_WIFIWINFO,	
	ESP12_AT_RESPONSE_SMART_SUC,	
	ESP12_AT_RESPONSE_CWLAP,
	
	ESP12_AT_RESPONSE_MQTTCONN,//	"+MQTTCONNECTED:0\0",
	ESP12_AT_RESPONSE_MQTTDISCONN,//"+MQTTDISCONNECTED:0\0",
	ESP12_AT_RESPONSE_MQTTRECV,//"+MQTTSUBRECV:0,\0",
	ESP12_AT_RESPONSE_OK,
	ESP12_AT_RESPONSE_MAX,
	
}en_esp12_atResponse;


void mt_wifi_init(void);
void mt_wifi_pro(void);

#endif
